# Default values for cluster-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # Repository for container
  repository: dbscale/web-manager
  tag:
  pullPolicy: IfNotPresent

imagePullSecrets:
- name: "regcred"

replicaCount: 3

init: {}
  # extraArgs:
  # - db_name
  # - db_host
  # - db_port
  # - db_auth

extraArgs: []

## Here annotations can be added to the cluster-manager deployment
annotations: {}
## Here labels can be added to the cluster-manager deployment
labels: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8080
  nodePort: 30001

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2
  #   memory: 4G
  # requests:
  #   cpu: 1
  #   memory: 1G

sys:
  data: |
    connect.cm.addr=cluster_manager:20152

jdbc:
  data: |
    jdbc.type=mysql
    jdbc.driver=com.mysql.cj.jdbc.Driver
    jdbc.url=jdbc:mysql://proxysql:3306/dbscale
    jdbc.username=
    jdbc.password=
    jdbc.maxActive=100
    jdbc.maxWait=10000
    jdbc.timeBetweenEvictionRunsMillis=60000
    jdbc.minEvictableIdleTimeMillis=1800000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []
#- effect: NoSchedule
#  operator: Exists
# - key: CriticalAddonsOnly
#   operator: Exists
# - effect: NoExecute
#   operator: Exists

affinity: {}
#  nodeAffinity:
#    requiredDuringSchedulingIgnoredDuringExecution:
#      nodeSelectorTerms:
#      - matchExpressions:
#        - key: node-role.kubernetes.io/dbscale-controller
#          operator: Exists
#  podAntiAffinity:
#    requiredDuringSchedulingIgnoredDuringExecution:
#    - labelSelector:
#        matchLabels:
#          app.kubernetes.io/instance: "cluster-engine"
#          app.kubernetes.io/name: "cluster-engine"
#      topologyKey: kubernetes.io/hostname
